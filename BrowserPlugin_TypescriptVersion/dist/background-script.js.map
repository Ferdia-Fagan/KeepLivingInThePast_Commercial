{"version":3,"file":"background-script.js","mappings":";;;;;;;;;;;AAKA,uDAAuD;AACvD,wCAAwC;AAExC,mCAAmC;AAEnC,6BAA6B;AAE7B,2EAA2E;AAE3E,qBAAqB;AACrB,4DAA4D;AAC5D,QAAQ;AAER,iCAAiC;AACjC,iEAAiE;AACjE,0CAA0C;AAC1C,QAAQ;AAER,mFAAmF;AAEnF,QAAQ;AAER,kCAAkC;AAElC,QAAQ;AAER,4BAA4B;AAE5B,QAAQ;AAER,kCAAkC;AAClC,2CAA2C;AAC3C,QAAQ;AAER,IAAI;AAEJ,2DAA2D","sources":["webpack://keep-living-in-the-past-man/./src/background/native_application_communication/NativeApplicationCommunicator.ts"],"sourcesContent":["// import * as Browser from '../../../node_modules/webextension-polyfill/dist/browser-polyfill.js';\nimport browser from \"webextension-polyfill\";\n// const browser = require(\"webextension-polyfill\");\nimport * as nativeMessaging from \"./messages\";\n\n// export default class NativeApplicationCommunicator {\n// class NativeApplicationCommunicator {\n\n//     requestsToRoute = new Map();\n\n//     requestResponseId = 0;\n\n//     port = browser.runtime.connectNative(\"keep_living_in_the_past_man\");\n\n//     constructor(){\n//         this.port.onMessage.addListener(this.onResponse);\n//     }\n\n//     sendMessage(message: any){\n//         console.log(\"sned test message to native application\")\n//         this.port.postMessage(message);\n//     }\n\n//     sendMessageWithResponse(message: any, messageResponseAction: (() => void)) {\n        \n//     }\n\n//     onResponse(response: any) {\n\n//     }\n\n//     onError(error: any) {\n\n//     }\n\n//     getNewResponseId(): number{\n//         return this.requestResponseId++;\n//     }\n\n// }\n\n// export const inst = new NativeApplicationCommunicator();\n\n\n"],"names":[],"sourceRoot":""}